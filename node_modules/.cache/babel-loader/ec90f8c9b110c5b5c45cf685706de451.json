{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class CumSumProgram {\n  constructor(shape, exclusive, reverse) {\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n    const rank = shape.length;\n    const finalDim = shape[shape.length - 1];\n    const comparator = reverse ? '<' : '>';\n    this.userCode = `\n      int getIndex(int i) {\n        ${reverse ? `return ${finalDim} -i - 1;` : 'return i;'}\n      }\n\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords')};\n        float val = 0.0;\n        for (int i = ${finalDim} - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx ${comparator} end) {\n            continue;\n          }\n          if (idx == end && ${exclusive}) {\n            continue;\n          }\n          ${getFinalCoord(rank, 'coords')} = idx;\n          val += getX(${getCoords(rank, 'coords')});\n        }\n        setOutput(val);\n      }\n    `;\n  }\n\n}\n\nfunction getCoords(rank, name) {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.x, ${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.x, ${name}.y, ${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n  } else {\n    throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n  }\n}\n\nfunction getFinalCoord(rank, name) {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.w`;\n  } else {\n    throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n  }\n}","map":{"version":3,"sources":["../src/cumsum_gpu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,OAAM,MAAO,aAAP,CAAoB;AAKxB,EAAA,WAAA,CAAY,KAAZ,EAA6B,SAA7B,EAAiD,OAAjD,EAAiE;AAJjE,SAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AAKE,SAAK,WAAL,GAAmB,KAAnB;AACA,UAAM,IAAI,GAAG,KAAK,CAAC,MAAnB;AACA,UAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB,CAAtB;AACA,UAAM,UAAU,GAAG,OAAO,GAAG,GAAH,GAAS,GAAnC;AAEA,SAAK,QAAL,GAAgB;;UAEV,OAAO,GAAG,UAAU,QAAQ,UAArB,GAAkC,WAAW;;;;UAIpD,iBAAiB,CAAC,IAAD,CAAM;oBACb,aAAa,CAAC,IAAD,EAAO,QAAP,CAAgB;;uBAE1B,QAAQ;;oBAEX,UAAU;;;8BAGA,SAAS;;;YAG3B,aAAa,CAAC,IAAD,EAAO,QAAP,CAAgB;wBACjB,SAAS,CAAC,IAAD,EAAO,QAAP,CAAgB;;;;KAlB7C;AAuBD;;AAlCuB;;AAqC1B,SAAS,SAAT,CAAmB,IAAnB,EAAiC,IAAjC,EAA6C;AAC3C,MAAI,IAAI,KAAK,CAAb,EAAgB;AACd,WAAO,GAAG,IAAI,EAAd;AACD,GAFD,MAEO,IAAI,IAAI,KAAK,CAAb,EAAgB;AACrB,WAAO,GAAG,IAAI,OAAO,IAAI,IAAzB;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,CAAb,EAAgB;AACrB,WAAO,GAAG,IAAI,OAAO,IAAI,OAAO,IAAI,IAApC;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,CAAb,EAAgB;AACrB,WAAO,GAAG,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,IAA/C;AACD,GAFM,MAEA;AACL,UAAM,KAAK,CAAC,2BAA2B,IAAI,uBAAhC,CAAX;AACD;AACF;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAAqC,IAArC,EAAiD;AAC/C,MAAI,IAAI,KAAK,CAAb,EAAgB;AACd,WAAO,GAAG,IAAI,EAAd;AACD,GAFD,MAEO,IAAI,IAAI,KAAK,CAAb,EAAgB;AACrB,WAAO,GAAG,IAAI,IAAd;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,CAAb,EAAgB;AACrB,WAAO,GAAG,IAAI,IAAd;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,CAAb,EAAgB;AACrB,WAAO,GAAG,IAAI,IAAd;AACD,GAFM,MAEA;AACL,UAAM,KAAK,CAAC,2BAA2B,IAAI,uBAAhC,CAAX;AACD;AACF","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class CumSumProgram {\n    constructor(shape, exclusive, reverse) {\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        const rank = shape.length;\n        const finalDim = shape[shape.length - 1];\n        const comparator = reverse ? '<' : '>';\n        this.userCode = `\n      int getIndex(int i) {\n        ${reverse ? `return ${finalDim} -i - 1;` : 'return i;'}\n      }\n\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords')};\n        float val = 0.0;\n        for (int i = ${finalDim} - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx ${comparator} end) {\n            continue;\n          }\n          if (idx == end && ${exclusive}) {\n            continue;\n          }\n          ${getFinalCoord(rank, 'coords')} = idx;\n          val += getX(${getCoords(rank, 'coords')});\n        }\n        setOutput(val);\n      }\n    `;\n    }\n}\nfunction getCoords(rank, name) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.x, ${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.x, ${name}.y, ${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n    }\n}\nfunction getFinalCoord(rank, name) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=cumsum_gpu.js.map"]},"metadata":{},"sourceType":"module"}